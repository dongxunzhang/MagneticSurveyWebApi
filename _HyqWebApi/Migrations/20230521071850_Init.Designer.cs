// <auto-generated />
using MagneticSurvey.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace _HyqWebApi.Migrations
{
    [DbContext(typeof(SurveyDbContext))]
    [Migration("20230521071850_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("MagneticSurvey.Data.QuestionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MagneticSurvey.Data.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pwd")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MagneticSurvey.Data.UserQuestion", b =>
                {
                    b.Property<int>("QuestionEntitysId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserEntitysId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.HasKey("QuestionEntitysId", "UserEntitysId");

                    b.HasIndex("UserEntitysId");

                    b.ToTable("UserQuestion");
                });

            modelBuilder.Entity("MagneticSurvey.Data.UserQuestion", b =>
                {
                    b.HasOne("MagneticSurvey.Data.QuestionEntity", "QuestionEntity")
                        .WithMany("UserQuestions")
                        .HasForeignKey("QuestionEntitysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagneticSurvey.Data.UserEntity", "UserEntity")
                        .WithMany("UserQuestions")
                        .HasForeignKey("UserEntitysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("MagneticSurvey.Data.QuestionEntity", b =>
                {
                    b.Navigation("UserQuestions");
                });

            modelBuilder.Entity("MagneticSurvey.Data.UserEntity", b =>
                {
                    b.Navigation("UserQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
